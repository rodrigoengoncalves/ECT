entity TimerN is
    Generic (N : integer := 10);  -- Valor padrão de N é 10
    Port (
        start : in std_logic;
        reset : in std_logic;
        clk : in std_logic;
        enable : in std_logic;
        timerOut : out std_logic
    );
end entity TimerN;

architecture Behavioral of TimerN is
    signal counter : integer range 0 to N := 0;
    signal timerActive : std_logic := '0';
begin
    process (clk, reset)
    begin
        if reset = '1' then
            counter <= 0;
            timerActive <= '0';
        elsif rising_edge(clk) then
            if enable = '1' then
                if start = '1' then
                    timerActive <= '1';
                    counter <= 0;
                elsif timerActive = '1' then
                    if counter < N then
                        counter <= counter + 1;
                    else
                        timerActive <= '0';
                    end if;
                end if;
            end if;
        end if;
    end process;

    timerOut <= timerActive;
end architecture Behavioral;