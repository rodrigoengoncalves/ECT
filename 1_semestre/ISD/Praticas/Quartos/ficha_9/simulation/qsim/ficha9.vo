// Copyright (C) 2023  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 22.1std.2 Build 922 07/20/2023 SC Lite Edition"

// DATE "11/12/2024 12:02:08"

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for Questa Intel FPGA (Verilog) only
// 

`timescale 1 ps/ 1 ps

module FullAdder (
	Cout,
	b,
	a,
	CIN,
	S);
output 	Cout;
input 	b;
input 	a;
input 	CIN;
output 	S;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Cout~output_o ;
wire \S~output_o ;
wire \a~input_o ;
wire \CIN~input_o ;
wire \b~input_o ;
wire \inst4~0_combout ;
wire \inst6~0_combout ;


cycloneive_io_obuf \Cout~output (
	.i(\inst4~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Cout~output_o ),
	.obar());
// synopsys translate_off
defparam \Cout~output .bus_hold = "false";
defparam \Cout~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \S~output (
	.i(\inst6~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S~output_o ),
	.obar());
// synopsys translate_off
defparam \S~output .bus_hold = "false";
defparam \S~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \a~input (
	.i(a),
	.ibar(gnd),
	.o(\a~input_o ));
// synopsys translate_off
defparam \a~input .bus_hold = "false";
defparam \a~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \CIN~input (
	.i(CIN),
	.ibar(gnd),
	.o(\CIN~input_o ));
// synopsys translate_off
defparam \CIN~input .bus_hold = "false";
defparam \CIN~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \b~input (
	.i(b),
	.ibar(gnd),
	.o(\b~input_o ));
// synopsys translate_off
defparam \b~input .bus_hold = "false";
defparam \b~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst4~0 (
// Equation(s):
// \inst4~0_combout  = (\a~input_o  & ((\CIN~input_o ) # (\b~input_o ))) # (!\a~input_o  & (\CIN~input_o  & \b~input_o ))

	.dataa(\a~input_o ),
	.datab(\CIN~input_o ),
	.datac(\b~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst4~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst4~0 .lut_mask = 16'hE8E8;
defparam \inst4~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst6~0 (
// Equation(s):
// \inst6~0_combout  = \a~input_o  $ (\CIN~input_o  $ (\b~input_o ))

	.dataa(\a~input_o ),
	.datab(\CIN~input_o ),
	.datac(\b~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst6~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst6~0 .lut_mask = 16'h9696;
defparam \inst6~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign Cout = \Cout~output_o ;

assign S = \S~output_o ;

endmodule
