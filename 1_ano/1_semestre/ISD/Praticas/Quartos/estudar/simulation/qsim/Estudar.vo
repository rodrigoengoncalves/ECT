// Copyright (C) 2023  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 22.1std.2 Build 922 07/20/2023 SC Lite Edition"

// DATE "11/24/2024 00:50:00"

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for Questa Intel FPGA (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Estudar (
	y0,
	x1,
	E0_L,
	E1,
	x0,
	y1,
	y2,
	y3);
output 	y0;
input 	x1;
input 	E0_L;
input 	E1;
input 	x0;
output 	y1;
output 	y2;
output 	y3;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \y0~output_o ;
wire \y1~output_o ;
wire \y2~output_o ;
wire \y3~output_o ;
wire \E1~input_o ;
wire \x0~input_o ;
wire \x1~input_o ;
wire \E0_L~input_o ;
wire \inst~0_combout ;
wire \inst7~0_combout ;
wire \inst8~0_combout ;
wire \inst9~0_combout ;


cycloneive_io_obuf \y0~output (
	.i(\inst~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\y0~output_o ),
	.obar());
// synopsys translate_off
defparam \y0~output .bus_hold = "false";
defparam \y0~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \y1~output (
	.i(\inst7~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\y1~output_o ),
	.obar());
// synopsys translate_off
defparam \y1~output .bus_hold = "false";
defparam \y1~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \y2~output (
	.i(\inst8~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\y2~output_o ),
	.obar());
// synopsys translate_off
defparam \y2~output .bus_hold = "false";
defparam \y2~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \y3~output (
	.i(\inst9~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\y3~output_o ),
	.obar());
// synopsys translate_off
defparam \y3~output .bus_hold = "false";
defparam \y3~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \E1~input (
	.i(E1),
	.ibar(gnd),
	.o(\E1~input_o ));
// synopsys translate_off
defparam \E1~input .bus_hold = "false";
defparam \E1~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \x0~input (
	.i(x0),
	.ibar(gnd),
	.o(\x0~input_o ));
// synopsys translate_off
defparam \x0~input .bus_hold = "false";
defparam \x0~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \x1~input (
	.i(x1),
	.ibar(gnd),
	.o(\x1~input_o ));
// synopsys translate_off
defparam \x1~input .bus_hold = "false";
defparam \x1~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \E0_L~input (
	.i(E0_L),
	.ibar(gnd),
	.o(\E0_L~input_o ));
// synopsys translate_off
defparam \E0_L~input .bus_hold = "false";
defparam \E0_L~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst~0 (
// Equation(s):
// \inst~0_combout  = (\E1~input_o  & (!\x0~input_o  & (!\x1~input_o  & !\E0_L~input_o )))

	.dataa(\E1~input_o ),
	.datab(\x0~input_o ),
	.datac(\x1~input_o ),
	.datad(\E0_L~input_o ),
	.cin(gnd),
	.combout(\inst~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst~0 .lut_mask = 16'h0002;
defparam \inst~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst7~0 (
// Equation(s):
// \inst7~0_combout  = (\x0~input_o  & (\E1~input_o  & (!\x1~input_o  & !\E0_L~input_o )))

	.dataa(\x0~input_o ),
	.datab(\E1~input_o ),
	.datac(\x1~input_o ),
	.datad(\E0_L~input_o ),
	.cin(gnd),
	.combout(\inst7~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst7~0 .lut_mask = 16'h0008;
defparam \inst7~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst8~0 (
// Equation(s):
// \inst8~0_combout  = (\x1~input_o  & (\E1~input_o  & (!\x0~input_o  & !\E0_L~input_o )))

	.dataa(\x1~input_o ),
	.datab(\E1~input_o ),
	.datac(\x0~input_o ),
	.datad(\E0_L~input_o ),
	.cin(gnd),
	.combout(\inst8~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst8~0 .lut_mask = 16'h0008;
defparam \inst8~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst9~0 (
// Equation(s):
// \inst9~0_combout  = (\x0~input_o  & (\x1~input_o  & (\E1~input_o  & !\E0_L~input_o )))

	.dataa(\x0~input_o ),
	.datab(\x1~input_o ),
	.datac(\E1~input_o ),
	.datad(\E0_L~input_o ),
	.cin(gnd),
	.combout(\inst9~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst9~0 .lut_mask = 16'h0080;
defparam \inst9~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign y0 = \y0~output_o ;

assign y1 = \y1~output_o ;

assign y2 = \y2~output_o ;

assign y3 = \y3~output_o ;

endmodule
