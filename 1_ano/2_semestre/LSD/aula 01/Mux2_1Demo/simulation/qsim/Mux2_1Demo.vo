// Copyright (C) 2023  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 22.1std.2 Build 922 07/20/2023 SC Lite Edition"

// DATE "02/25/2025 14:48:37"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for Questa Intel FPGA (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Mux2_1 (
	A,
	B,
	Sel,
	Y);
input 	A;
input 	B;
input 	Sel;
output 	Y;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Y~output_o ;
wire \B~input_o ;
wire \A~input_o ;
wire \Sel~input_o ;
wire \Y~0_combout ;


cycloneive_io_obuf \Y~output (
	.i(\Y~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Y~output_o ),
	.obar());
// synopsys translate_off
defparam \Y~output .bus_hold = "false";
defparam \Y~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \B~input (
	.i(B),
	.ibar(gnd),
	.o(\B~input_o ));
// synopsys translate_off
defparam \B~input .bus_hold = "false";
defparam \B~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \A~input (
	.i(A),
	.ibar(gnd),
	.o(\A~input_o ));
// synopsys translate_off
defparam \A~input .bus_hold = "false";
defparam \A~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Sel~input (
	.i(Sel),
	.ibar(gnd),
	.o(\Sel~input_o ));
// synopsys translate_off
defparam \Sel~input .bus_hold = "false";
defparam \Sel~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \Y~0 (
// Equation(s):
// \Y~0_combout  = (\Sel~input_o  & (\B~input_o )) # (!\Sel~input_o  & ((\A~input_o )))

	.dataa(\B~input_o ),
	.datab(\A~input_o ),
	.datac(gnd),
	.datad(\Sel~input_o ),
	.cin(gnd),
	.combout(\Y~0_combout ),
	.cout());
// synopsys translate_off
defparam \Y~0 .lut_mask = 16'hAACC;
defparam \Y~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign Y = \Y~output_o ;

endmodule
